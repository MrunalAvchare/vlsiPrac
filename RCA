--------------------------------------------------------------------------------------------------------------------------

hALF ADDER

library ieee;

use IEEE.STD_LOGIC_1164.ALL;



entity HA_normal is

Port ( a : in STD_LOGIC;

b : in STD_LOGIC;

sum : out STD_LOGIC; carry : out STD_LOGIC);
end HA_normal;



architecture Behavioral of HA_normal is



begin

sum<= a xor b; carry<= a and b;


end Behavioral;

--------------------------------------------------------------------------------------------------------------------------

FULL ADDER

library IEEE;

use IEEE.STD_LOGIC_1164.ALL;

entity full_adderst is

Port ( a : in STD_LOGIC;

b : in STD_LOGIC;
 
cin : in STD_LOGIC; sum : out STD_LOGIC; cout : out STD_LOGIC);
end full_adderst;



architecture Structural of full_adderst is component HA_normal is
Port ( a : in STD_LOGIC;

b : in STD_LOGIC;

sum : out STD_LOGIC; carry : out STD_LOGIC);
end component;



component or_gate is

Port ( A : in STD_LOGIC;

B : in STD_LOGIC;

Y : out STD_LOGIC);

end component;

signal temp1,temp2,temp3 : std_logic; begin
u1: HA_normal port map(a,b,temp1,temp2);

u2: HA_normal port map(temp1,cin,sum,temp3); u3: or_gate port map(temp2,temp3,cout);
end Structural;

`-------------------------------------------------------------------------------------------------------------------------
 




or_gate:



library IEEE;

use IEEE.std_logic_1164.all;
entity or_gate is
port(A : in std_logic;	-- OR gate input B : in std_logic;	-- OR gate input
Y : out std_logic);	-- OR gate output
end or_gate;
architecture orLogic of or_gate is
begin
Y <= A OR B;
 end orLogic;


----------------------------------------------------------------------------------------------------------------------------------

rca:


-- Company:

-- Engineer:

--

-- Create Date: 21.08.2023 15:29:27

-- Design Name:

-- Module Name: RCA - Behavioral

-- Project Name:

-- Target Devices:

-- Tool Versions:

-- Description:

--

-- Dependencies:

--

-- Revision:

-- Revision 0.01 - File Created

-- Additional Comments:

--

 library IEEE;

use IEEE.STD_LOGIC_1164.ALL;



-- Uncomment the following library declaration if using

-- arithmetic functions with Signed or Unsigned values

--use IEEE.NUMERIC_STD.ALL;



-- Uncomment the following library declaration if instantiating

-- any Xilinx leaf cells in this code.

--library UNISIM;

--use UNISIM.VComponents.all;



entity rca is

Port		( a : in STD_LOGIC_vector(3 downto 0); b : in STD_LOGIC_vector(3 downto 0); cin : in STD_LOGIC;
sum : out STD_LOGIC_vector(3 downto 0); cout : out STD_LOGIC);
end rca;



architecture Behavioral of rca is COMPONENT full_adderst is
Port (	a : in STD_LOGIC;

b : in STD_LOGIC;

cin : in STD_LOGIC; sum : out STD_LOGIC;
 
cout : out STD_LOGIC); end COMPONENT;
signal temp:std_logic_vector(3 downto 0); begin
u1: full_adderst port map(a(0),b(0),cin,sum(0),temp(0));

u2: full_adderst port map(a(1),b(1),temp(0),sum(1),temp(1));

u3: full_adderst port map(a(2),b(2),temp(1),sum(2),temp(2)); u4: full_adderst port map(a(3),b(3),temp(2),sum(3),cout);


end Behavioral;


-------------------------------------------------------------------------------------------------------------------------------------------


RCA_testbench:



-- Company:

-- Engineer:

--

-- Create Date: 21.08.2023 15:56:54

-- Design Name:

-- Module Name: RCA_tb - Behavioral

-- Project Name:

-- Target Devices:

-- Tool Versions:

-- Description:

--
 
-- Dependencies:

--

-- Revision:

-- Revision 0.01 - File Created

-- Additional Comments:

--

----------------------------------------------------------------------------------




library IEEE;

use IEEE.STD_LOGIC_1164.ALL;



-- Uncomment the following library declaration if using

-- arithmetic functions with Signed or Unsigned values

--use IEEE.NUMERIC_STD.ALL;



-- Uncomment the following library declaration if instantiating

-- any Xilinx leaf cells in this code.

--library UNISIM;

--use UNISIM.VComponents.all;



entity rca_tb is

--	Port ( ); end rca_tb;


architecture Behavioral of RCA_tb is
 
component rca is

Port ( a : in STD_LOGIC_VECTOR (3 downto 0);

b : in STD_LOGIC_VECTOR (3 downto 0); Sum : out STD_LOGIC_VECTOR (3 downto 0); Cout : out STD_LOGIC;
Cin : in STD_LOGIC);

end component;



signal a,b,sum : std_logic_vector(3 downto 0); signal cout,cin : std_logic;
begin

u1: rca port map(a,b,sum,cout,cin); process
begin a<="0101"; b<="1010";
cin<='1';

wait for 200 ns;



a<="1101"; b<="1000";
cin<='0';

wait for 200 ns;



end process; end Behavioral;
 

 

